FORMAT: 1A
HOST: http://1270.0.1:5000/api/v2/auth/signup/

# Maintenance Tracker


## Project Overview [/questions]
Maintenance Tracker App is an application that provides users with the ability to reach out to operations or repairs department regarding repair or maintenance requests and monitor the status of their request.

## Required Features
1. Users can create an account and log in.
2. The users should be able to make maintenance or repairs request.
3. An admin should be able to approve/reject a repair/maintenance request.
4. The admin should be able to resolve a request once it is done.
5. The admin should be able to view all maintenance/repairs requests on the application
6. The user can view all his/her requests

Making API calls will require the following header

+ Content-Type: application/json

After authentication, the rest of the endpoints will require to include the bearer token that is sent with the login reponse.

Authentication: Bearer [Token]


## Register a User

### Sign Up [POST]
Where a user can register his/her credentials on the API

+ Request (application/json)

        {
            "name": "Arnold Osoro",
            "email": "arnoldmaengwe@gmail.com",
            "username": "mmosoroohh",
            "password": "$$$$",
            "role":"1"
        }

+ Response 201 (application/json)

    + Headers

            user: 

    + Body

            {
                "message": "New user registered!"
            }
            
## Login [/users/signin]

#### Sign in[POST]
The user can  login with their username and password

+ Request (application/json)
        
        {
            "username":"mmosoroohh",
            "password": "$$$$"
        }
        
+ Response 200 (application/json)
        {
            "message": "Logged in successfully!",
            "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE1Mjg1NTAzMjgsIm5iZiI6MTUyODU1MDMyOCwianRpIjoiOTI5MWM1OGUtZGIzYy00ODczLWI0MWUtYWE5NjdhZDdhNGYxIiwiZXhwIjoxNTI4NTUxMjI4LCJpZGVudGl0eSI6ImJyeW8iLCJmcmVzaCI6ZmFsc2UsInR5cGUiOiJhY2Nlc3MifQ.rKyae63Dyw_Ta-9ZblOyY7qgrnEQNy0-aTSVmu0rBKs"
        }
        
## User Maintenance Tracker Requests [/users/requests/]

#### Create a maintenance/repair request[POST]

The registered user can create a maintenance/repair request.

+ Request (application/json)
        
        {
            "name": "Espon Printer",
            "description": "Missing power cable",
            "category": "maintenance", 
            "department": "Administrator"
        }
        
+ Response 201 (application/json)
        
        {
            "Requests": {
                "category": "maintenance",
                "department": "Administrator",
                "description": "Missing power cable",
                "id": 0,
                "name": "Espon Printer",
                "status": "",
                "user_id": 7
            }
        }
        
### Get all requests[GET]
A user can be able to view all his/her requests on the API.
+ Response 200 (application/json)
        
        {
            "request": [
                {
                    "category": "maintenance",
                    "department": "Administrator",
                    "description": "Missing power cable",
                    "id": 14,
                    "name": "Espon Printer",
                    "status": "pending",
                    "user_id": 7
                }
            ]
        }
        
### User can get a single Request [GET]
A user can view a particular request's details he/she posted on the API.

+ Parameters
    + request_id(integer) - Id of the request the user wants to get details.

+ Response 200 (application/json)

        {
            "request": {
                "category": "maintenance",
                "department": "Administrator",
                "description": "Missing power cable",
                "id": 14,
                "name": "Espon Printer",
                "status": "pending",
                "user_id": 7
            }
        }
        

### User can Modify a Request [PUT]
A user can modify a particular request which he/she posted on the API.

+ Parameters
    + request_id (integer) - Id of the request the user wants to edit/modify.
    

+ Request (application/json)

        {
            "name": "Espon Printer",
            "description": "low cartridge", 
            "category": "maintenance", 
            "department": "Administrator"
        }
        
+ Response 201 (application/json)

        {
            "requests": {
                "category": "maintenance",
                "department": "Administrator",
                "description": "low cartridge",
                "id": 14,
                "name": "Espon Printer",
                "status": "pending",
                "user_id": 7
            }
        }

### User can delete a Request [DELETE]
The user can delete a particular request he/she posted on the API.

+ Parameters
    + request_id(integer) - The ID of the request the user can delete a request.

+ Response 200 (application/json)
    
        {
            "message": "Request has been deleted!"
        }


## Admin Maintenance Tracker Requests [/admin/requests/]

### Get all Requests[GET]

The admin can get all available requests for all the users.

+ Response 200 (application/json)
        
        {
            "Requests": [
                {
                    "category": "maintenance",
                    "department": "IT",
                    "description": "Needs Anti-virus",
                    "id": 3,
                    "name": "HP laptop",
                    "status": "pending",
                    "user_id": 2
                },
                {
                    "category": "maintenance",
                    "department": "IT",
                    "description": "Needs Anti-virus",
                    "id": 4,
                    "name": "HP laptop",
                    "status": "pending",
                    "user_id": 2
                },
                {
                    "category": "maintenance",
                    "department": "IT",
                    "description": "Needs Anti-virus",
                    "id": 5,
                    "name": "HP laptop",
                    "status": "pending",
                    "user_id": 2
                },
                {
                    "category": "maintenance",
                    "department": "IT",
                    "description": "Needs Anti-virus",
                    "id": 6,
                    "name": "HP laptop",
                    "status": "pending",
                    "user_id": 2
                },
                {
                    "category": "maintenance",
                    "department": "IT",
                    "description": "Needs Anti-virus",
                    "id": 7,
                    "name": "HP laptop",
                    "status": "pending",
                    "user_id": 2
                },
                {
                    "category": "maintenance",
                    "department": "IT",
                    "description": "Needs Anti-virus",
                    "id": 8,
                    "name": "HP laptop",
                    "status": "pending",
                    "user_id": 2
                },
                {
                    "category": "repair",
                    "department": "Medical",
                    "description": "Missing power unit",
                    "id": 12,
                    "name": "Computer CPU",
                    "status": "pending",
                    "user_id": 6
                },
                {
                    "category": "repair",
                    "department": "Medical",
                    "description": "Missing power unit",
                    "id": 13,
                    "name": "Computer CPU",
                    "status": "pending",
                    "user_id": 6
                }
            ]
        }
        
## Admin Update / View a Request [/admin/requests/<int: id>]
Admin can view and update a particualr request's details on it's status.
+ Parameters
    + request_id (integer) - The ID of the request the admin would like to update it's status.
    
### Change Request Status[PUT]
+ Parameters
    + request_id(integer) - ID o the request the admin want modify the status of a request.

+ Request (application/json)
        
        {
            "status": "Approved"
        }
        
+ Response 200 (application/json)

        {
             "Requests": {
                    "category": "maintenance",
                    "department": "Administrator",
                    "description": "low cartridge",
                    "id": 14,
                    "name": "Espon Printer",
                    "status": "Approved",
                    "user_id": 7
            }
        }